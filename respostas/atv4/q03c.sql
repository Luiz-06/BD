/**/

CREATE FUNCTION denunciaAnonima() RETURNS TRIGGER 
AS $$
    BEGIN 
        IF TG_OP = 'UPDATE' THEN
            INSERT INTO CONTROLE_DE_ALTERACAO 
            (OPERACAO, DATA_HORA, USUARIO_QUE_ALTEROU, COD_ANTIGO, COD_NOVO, ESTOQUE_ANTIGO, ESTOQUE_NOVO)
            VALUES 
            ('U', CURRENT_TIMESTAMP, CURRENT_USER, OLD.COD_LIVRO, NEW.COD_LIVRO, OLD.QTD_ESTOQUE, NEW.QTD_ESTOQUE);
        END IF;

        IF TG_OP = 'DELETE' THEN
            INSERT INTO CONTROLE_DE_ALTERACAO 
            (OPERACAO, DATA_HORA, USUARIO_QUE_ALTEROU, COD_ANTIGO, COD_NOVO, ESTOQUE_ANTIGO, ESTOQUE_NOVO)
            VALUES 
            ('D', CURRENT_TIMESTAMP, CURRENT_USER, OLD.COD_LIVRO, NULL, OLD.QTD_ESTOQUE, NULL);
        END IF;

    RETURN NULL;
    END;
$$ LANGUAGE plpgsql;

CREATE TABLE TITULO (
    COD_TITULO SERIAL PRIMARY KEY, 
    NOME_TITULO VARCHAR(100), 
    DESC_TITULO VARCHAR(100)
);

CREATE TABLE LIVRO (
    COD_LIVRO SERIAL PRIMARY KEY, 
    COD_TITULO INT, 
    VALOR_LIVRO INT,
    QTD_ESTOQUE INT,
    FOREIGN KEY (COD_TITULO) REFERENCES TITULO(COD_TITULO)
);

CREATE TABLE FORNECEDOR (
    COD_FORNECEDOR SERIAL PRIMARY KEY, 
    NOME_FORNECEDOR VARCHAR(100),
    FONE_FORNECEDOR VARCHAR(100)
);

CREATE TABLE PEDIDO (
    COD_PEDIDO SERIAL PRIMARY KEY, 
    COD_FORNECEDOR INT, 
    HORA_PEDIDO TIME,
    DATA_PEDIDO DATE,
    VALOR_TOTAL_PEDIDO INT,
    FOREIGN KEY (COD_FORNECEDOR) REFERENCES FORNECEDOR(COD_FORNECEDOR)
);

CREATE TABLE ITEM_PEDIDO (
    COD_ITEM_PEDIDO SERIAL PRIMARY KEY, 
    COD_PEDIDO INT, 
    COD_LIVRO INT,
    FOREIGN KEY (COD_PEDIDO) REFERENCES PEDIDO(COD_PEDIDO),
    FOREIGN KEY (COD_LIVRO) REFERENCES LIVRO(COD_LIVRO)
);

CREATE TABLE CONTROLE_DE_ALTERACAO (
    OPERACAO VARCHAR(1),
    DATA_HORA TIMESTAMP,
    USUARIO_QUE_ALTEROU VARCHAR(100),
    COD_ANTIGO INT, 
    COD_NOVO INT,
    ESTOQUE_ANTIGO INT,
    ESTOQUE_NOVO INT
);

CREATE TRIGGER CAGUETA 
BEFORE 
UPDATE OR DELETE ON LIVRO
FOR EACH ROW 
EXECUTE FUNCTION denunciaAnonima();
